% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/types.R
\name{dap_types}
\alias{dap_types}
\alias{dap_type}
\alias{breakpoint}
\alias{checksum}
\alias{source}
\title{DAP types constructors}
\usage{
dap_type(.name, ...)

breakpoint(
  id,
  verified,
  message,
  source,
  line,
  column,
  endLine,
  endColumn,
  instructionReference,
  offset,
  reason
)

checksum(algorithm, checksum)

source(
  name,
  path,
  sourceReference,
  presentationHint,
  origin,
  sources,
  adapterData,
  checksums
)
}
\arguments{
\item{.name}{The name of DAP type (in snake-case, instead of camel-case)}

\item{...}{Additional arguments should be named similarly to the DAP
specification, with a trailing \verb{?} if the value is optional. The param
value should be a predicate function used for field data validation.}
}
\description{
Internal DAP type constructors are built with a mini type syntax, which
performs some light data validation and builds type constructors. Data is
returned as a simple S3 object, which can be easily packaged as a JSON
message body. The goal of this mini type language is to keep the syntax of
type specifications as close to their language-agnostic JSON-schema type
specification as possible.
}
\section{Functions}{
\itemize{
\item \code{breakpoint()}: (\url{https://microsoft.github.io/debug-adapter-protocol/specification#Types_Breakpoint})

\item \code{checksum()}: (\url{https://microsoft.github.io/debug-adapter-protocol/specification#Types_Checksum})

\item \code{source()}: (\url{https://microsoft.github.io/debug-adapter-protocol/specification#Types_Source})

}}
