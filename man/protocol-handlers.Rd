% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/debuggee.R, R/handle.R
\name{protocol-handlers}
\alias{protocol-handlers}
\alias{r_handle}
\alias{r_handle.default}
\alias{r_handle.request}
\alias{r_handle.response}
\alias{r_handle.response.default}
\alias{r_handle.request.default}
\alias{r_handle.request.setBreakpoints}
\alias{handle}
\alias{handle.NULL}
\alias{handle.request}
\alias{handle.request.initialize}
\alias{handle.request.attach}
\alias{handle.request.setExceptionBreakpoints}
\alias{handle.request.setFunctionBreakpoints}
\alias{handle.request.setBreakpoints}
\alias{handle.request.disconnect}
\alias{handle.request.configurationDone}
\alias{handle.reverse_request}
\alias{handle.response}
\title{Dispatch for protocol messaging}
\usage{
r_handle(x, ..., debuggee)

\method{r_handle}{default}(x, ..., debuggee)

r_handle.request(x, ..., debuggee)

r_handle.response(x, ..., debuggee)

\method{r_handle}{response.default}(x, ..., debuggee)

\method{r_handle}{request.default}(x, ..., debuggee)

\method{r_handle}{request.setBreakpoints}(x, ..., debuggee)

handle(x, ...)

\method{handle}{`NULL`}(x, ...)

handle.request(x, ...)

\method{handle}{request.initialize}(x, ..., adapter, client)

\method{handle}{request.attach}(x, ..., adapter, client)

\method{handle}{request.setExceptionBreakpoints}(x, ..., adapter, client)

\method{handle}{request.setFunctionBreakpoints}(x, ..., adapter, client)

\method{handle}{request.setBreakpoints}(x, ..., adapter, client)

\method{handle}{request.disconnect}(x, ..., adapter, client)

\method{handle}{request.configurationDone}(x, ..., adapter, client)

\method{handle}{reverse_request}(x, ..., adapter, client)

\method{handle}{response}(x, ...)
}
\description{
Dispatch for protocol messaging
}
\section{Functions}{
\itemize{
\item \code{handle(request.initialize)}: Initiailze the debug adapter and store client information for this session.
(\url{https://microsoft.github.io/debug-adapter-protocol/specification#Requests_Initialize})

\item \code{handle(request.attach)}: Attach a client's connection as the active session
(\url{https://microsoft.github.io/debug-adapter-protocol/specification#Requests_Attach})

\item \code{handle(request.setExceptionBreakpoints)}: Update internal adapter breakpoints listing and relay breakpoints to debug
session.
(\url{https://microsoft.github.io/debug-adapter-protocol/specification#Requests_setExceptionBreakpoints})

\item \code{handle(request.setFunctionBreakpoints)}: Set function breakpoints
(\url{https://microsoft.github.io/debug-adapter-protocol/specification#Requests_setFunctionBreakpoints})

\item \code{handle(request.setBreakpoints)}: Update internal adapter breakpoints listing and relay breakpoints to debug
session.
(\url{https://microsoft.github.io/debug-adapter-protocol/specification#Requests_SetBreakpoints})

\item \code{handle(request.disconnect)}: Handle disconnect request to disconnect from the debuggee, end the debug
session and shut itself down.
(\url{https://microsoft.github.io/debug-adapter-protocol/specification#Requests_Disconnect})

\item \code{handle(request.configurationDone)}: Handle configuration done requests.
(\url{https://microsoft.github.io/debug-adapter-protocol/specification#Requests_ConfigurationDone})

\item \code{handle(reverse_request)}: Issue reverse request and await response.
(\url{https://microsoft.github.io/debug-adapter-protocol/specification#Reverse_Requests_RunInTerminal})

\item \code{handle(response)}: Recieve reverse request response.
(\url{https://microsoft.github.io/debug-adapter-protocol/specification#Reverse_Requests_RunInTerminal})

}}
